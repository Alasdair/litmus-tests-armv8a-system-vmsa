arch = "AArch64"
name = "sbipi" # TODO find a better name
symbolic = ["x", "y", "p"]

page_table_setup = """
    physical pa1 pa2 pa3;
    x |-> pa1;
    y |-> pa2;
    f |-> pa3;

    identity 0x1000 with code;

    *pa1 = 0;
    *pa2 = 0;
    *pa3 = 0;
"""

[thread.0]
init = {}
code = """
    STR X0, [X1]
    MSR S3_0_C12_C11_5, X12 // ICC_SGI1R_EL1
    // might need an ISB here?
    LDAR X8, [X9]
    LDAR X3, [X2]
    // this last LDAR could be an LDR for the purpose of this test
"""

[thread.0.reset]
R0 = "extz(0b1, 64)"
R1 = "x"
R2 = "y"
R3 = "extz(0b0, 64)"
R8 = "extz(0b0, 64)"
R9 = "f"
R12 = "extz(0b1, 64)" # need to fix

"PSTATE.EL" = "0b00"

[thread.1]
init = {}
code = """
    STR X0, [X1]
    // compiler barrier
    // reordering this breaks
    LDAR X2, [X3]
    // this last LDAR could be an LDR for the purpose of this test
"""

[thread.1.reset]
R0 = "extz(0b1, 64)"
R1 = "y"
R2 = "extz(0b0, 64)"
R3 = "x"
R4 = "extz(0b1, 64)"
R5 = "f"
VBAR_EL1 = "extz(0x1000, 64)"

"PSTATE.SP" = "0b0"
"PSTATE.EL" = "0b00"

[section.thread1_el1_handler]
address = "0x1400"
code = """
    STLR X4, [X5]
return:
    ERET
"""

[final]
assertion = "0:X8 = 1 & 1:X3 = 0 & 1:X2 = 0"

